-- 현재 사용자의 전체 테이블 목록 보기
select *
	from tab;
	
-- CREATE : 테이블 생성 
-- 테이블명,컬럼명은 별도의 표시가 없으면 대문자로 관리된다
--create table 테이블명(
--컬럼명 타입(크기),
--컬럼명 타입(크기)
--);
--create Member ->내부적으로 MEMBER
--테이블명 규칙 -> t_옆에 붙이거나 또는 tb_,tc_,...
--->
---> 단어를 축약하여 사용할 경우 3~4자 사용

--게시판을 표현하는 데이터 생성 스크립트 (SQL)사용하기

--테이블 생성

create table tb_board(
no number(6),
title varchar2(200),
writer varchar2(200),
content varchar2(10000),
reg_date date
);

--테이블 삭제
DROP TABLE TB_BOARD;

PURGE RECYCLEBIN;//휴지통 비우기. 오라클 신버전에서 생긴 명령어
SYSDATE // 현재 시간 정보를 반환하는 오라클 지원 함수
--웹페이지에서 DB사용법
--사용할 명령어 부분 드래그해서 블럭처리후 실행해야한다


--CREATE시 제약조건 : 테이블레벨 제약조건, 컬럼레벨 제약조건 (따로 검색해볼것)
--CONSTRAINT라는 키워드를 사용해 제약조건에 이름을 설정할 수 있음. 정의하지 않으면 시스템이 SYS로 시작하는 이름을 설정해줌
--묵시적 작명규칙 : 제약타입_컬룸명
--create table 테이블명(
--컬럼명 타입(크기)컬럼레벨 제약조건,
--컬럼명 타입(크기),
--컬럼명 타입(크기)
--테이블레벨 제약조건
--);
--제약조건 5가지
--1. PK : Primary key //고유키. 하나의 테이블에 하나의 키가 존재해야 한다. UNIQUE + NOTNULL
여러 컬럼을 묶어서도 가능. 밑에서 설명
--2. UNIQUE //단일성 테이블 내에서 값이 고유해야 한다. (NULL 허용,중복 비허용)
--3. NN : NOT NULL //무조건 값이 들어와야 함
--4. FK : FOREIGN KEY //기본키. 다른 테이블 또는 자기 자신의 다른 컬럼의 값 참조
--5. CK : CHECK // 값의 입력시 제약 설정. 남자만 된다 여자만 된다 등

--DEFAULT : 값이 없을 경우 기본으로 값을 설정. NOT NULL하고 같이 사용할듯

create table tb_board(
no number(6) CONSTRAINT PK_NO PRIMARY KEY,
title varchar2(200) NOT NULL,
writer varchar2(30) NOT NULL,
content varchar2(4000)NOT NULL,
reg_date date DEFAULT SYSDATE
);

--테이블명 변경하기
RENAME A(원래 테이블명) TO B(변경할 테이블명);
RENAME TB_BOARD TO BOARD_TB

--생성된 테이블 구조 살펴보기
DESCRIBE 테이블명;
DESC 테이블명;

--여러 컬럼을 묶어서 프라이머리키 만들 수 있다.
--테이블레벨에서만 가능.
create table tb_board(
no number(6) CONSTRAINT PK_NO PRIMARY KEY,
title varchar2(200) NOT NULL,
writer varchar2(30) NOT NULL,
content varchar2(4000)NOT NULL,
reg_date date DEFAULT SYSDATE,
PRIMARY KEY (NO , TITLE)
);



CREATE TABLE MEMBER_JOIN(
NAME VARCHAR2(200) NOT NULL,
ID VARCHAR2(200) NOT NULL,
PASSWORD VARCHAR2(500) NOT NULL,
PASSWORD_CK VARCHAR2(500) NOT NULL CHECK(PASSWORD_CK==PASSWORD),
BIRTH DATE NOT NULL,
GENDER VARCHAR2(20) NOT NULL,
POST NUMBER(100) NOT NULL,
HOMEADDR VARCHAR2(1000) NOT NULL,
HOMEADDR_DETAIL VARCHAR2(1000) NOT NULL,
CALL NUMBER(100)NOT NULL,
EMAIL VARCHAR2(1000)NOT NULL,
PHONE NUMBER(100),
COMCALL NUMBER(100),
COMADDR VARCHAR2(1000),
PRIMARY KEY(ID,EMAIL)
);

--여기까지 ddl
--여기부터 dml

--대괄호들은 생략가능한 문장.

INSERT INTO 테이블명(컬럼명,...)
VALUES(값,...);
UPDATE 테이블명
SET 컬럼명 = 변경할 값...
[WHERE조건];//특정 데이터 컬럼에 있는것만 변경됨. 없으면 전부 변경.=범위 축소
DELETE
[FROM]테이블명
[WHERE조건];


--(위 설명 아래 코드 순서)
--INSERT:데이터 입력
--주의사항:문자를 입력할 대는 반드시 작은따옴표로 묶는다
INSERT INTO TB_BOARD(NO,TITLE,WRITER,CONTENT,REG_DATE)
VALUES(1,'제목','글쓴이','내용',SYSDATE);
--no가 프라이머리키라 중복은 안됨
INSERT INTO TB_BOARD(NO,TITLE,WRITER,CONTENT)
VALUES(2,'제목2','글쓴이2','내용2');
--content에 낫널이라 안들어감
INSERT INTO TB_BOARD(NO,TITLE,WRITER)
VALUES(3,'제목3','글쓴이3');
--인수 많으면 인수인계 받는사람 힘드니 쓰지말것. 처음에 컬럼을 따로 선언 안해주면 전부 입력하는걸로 간주
INSERT INTO TB_BOARD
VALLES(3,'제목3','글쓴이3','내용3',SYSDATE);

select *
	from tb_board;
	
delete from tb_board;//복구 가능한 삭제

rollback;//복구

truncate table tb_board;//복구 불가능한 삭제

--데이터 수정 : update
UPDATE 테이블명
 SET 컬럼 = 변경할 값
	[,컬럼=변경할 값..]//여러 값일경우
[조건절(WHERE)]//범위를 정할 경우
	
--1번 게시물의 내용을 "추운날"로 변경합니다.
UPDATE TB_BOARD
	SET CONTENT = '추운날'
	WHERE NO = 1;//1번과 같냐
	WHERE NO != 1; //1번과 같지 않냐
--2번 게시물의 제목을 "본차로드"로 내용을"느끼"로 변경합니다.
UPDATE TB_BOARD
	SET TITLE = '본차로드',
	CONTENT = '느끼'
	WHERE NO = 2;
-- 데이터 삭제 : DELETE
DELETE
	FROM 테이블명
[조건절(WHERE)]

--2번 게시물을 삭제하는 쿼리 작성
DELETE
	FORM TB_BOARD
	WHERE NO = 2;	
	
--SELECT
SELECT절
---------------------------------
*
SELECT * //컬럼명
FROM TB_BOARD;//테이블명
---------------------------------
SELECT NO,TITLE,WRITER // 이 컬럼만
FROM TB_BOARD; //이 테이블에서 가져온다
---------------------------------
SELECT EMPLOYEE_ID,FIRST_NAME
FROM EMPLOYEES;

DESC EMPLOYEES;

ALIAS
산술연산자
합성연산자

FROM //테이블로부터 받아오기 - 내일

WHERE

GROUP BY // 모래

HAVING

ORDER BY // 내일

SELECT EMPLOYEE_ID FIRSRT_NAME
	FROM EMPLOYEES;

--산술연산자 사용
--사원의 연봉을 출력하시오 (연봉: 급여*15)
SELECT LAST_NAME,SALARY
FROM EMPLOYEES;